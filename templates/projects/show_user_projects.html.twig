{% extends 'mainpage/main.html.twig' %}
{% block content %}
    <h1 id="title" style="margin: 25px;">{% trans %}Lista projektów{% endtrans %}</h1>
    <button class="btn btn-outline-secondary m-2" data-target="#modalNewProject"
            data-toggle="modal">{% trans %}Dodaj projekt{% endtrans %}</button>
    <table class="table table-striped">
        <thead>
        <tr>
            <th scope="col">id</th>
            <th style="text-align: center;" scope="col">{% trans %}Nazwa{% endtrans %}</th>
            <th scope="col"></th>
            <th scope="col">{% trans %}Zadania{% endtrans %}</th>
        </tr>
        </thead>
        <tbody>
        {% if projects is not empty %}
            {% for project in projects %}
                <tr>
                    <th>{{ project.id }}</th>
                    <th><textarea id="{{ project.id }}" style="width: 100%;">{{ project.name }}</textarea></th>
                    <th>
                        <button style="text-align: left;" data-id="{{ project.id }}"
                                onclick="editProject(this.getAttribute('data-id'))"
                                class="btn btn-secondary m-2">{% trans %}Zmień{% endtrans %}</button>
                    </th>
                    <td>
                        <a onclick="get_number(this.getAttribute('data-id'), this.getAttribute('data-name'))"
                           class="btn btn-warning" data-id="{{ project.id }}" data-name="{{ project.name }}"
                           data-target="#modalShowQuests"
                           data-toggle="modal">{% trans %}Pokaż{% endtrans %}</a>
                    </td>
                </tr>
            {% endfor %}
        {% else %}
            <tr>
                <td><h4>{% trans %}Brak projektów do wyświetlenia{% endtrans %}</h4></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        {% endif %}
        </tbody>
    </table>
    <div class="row d-flex justify-content-center w-100 paginator mt-3">
        {{ knp_pagination_render(projects) }}
    </div>
    <!--Workers modal-->
    <div aria-hidden="true" aria-labelledby="exampleModalCenterTitle" class="modal fade"
         id="modalShowQuests" role="dialog" tabindex="-1">
        <div id="questsModal" class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="mb-2 modal-body text-center">
                    <h2>{% trans %}Zadania{% endtrans %}</h2>
                    <select id="selectQuest" onclick="changeIdButton(this.options[this.selectedIndex].id)"
                            class="project_quests role_input browser-default custom-select"
                            name="quests">
                    </select>
                    <button name="showOneQuest" onclick="showQuest(this.id)"
                            class="btn btn-secondary m-2">{% trans %}Pokaż{% endtrans %}</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Workers modal-->
    <!--New project modal-->
    <div aria-hidden="true" aria-labelledby="exampleModalCenterTitle" class="modal fade"
         id="modalNewProject" role="dialog" tabindex="-1">
        <div id="questsModal" class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="mb-2 modal-body text-center">
                    <h2>{% trans %}Nazwa{% endtrans %}</h2>
                    {{ form_start(form, {'action': path('new_project'), 'method': 'GET'} ) }}
                    {{ form_widget(form.Name) }}
                    {{ form_errors(form.Name) }}
                    <select hidden="hidden" class="browser-default custom-select" name="client" required>
                        <option value="{{ app.user.id }}">{{ app.user.login }}</option>
                    </select>
                    <button class="btn btn-secondary m-2">{% trans %}Dodaj{% endtrans %}</button>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
    <!-- New project modal-->
    <form id="formEditProject" hidden>
        <input pattern=".{3,100}" type="text" name="Name">
    </form>
    <script>
        let number;
        let project_name;
        let number_delete;

        function get_number(clicked_id, name) {
            number = clicked_id;
            project_name = name;

            changeId("project_quests");
        }

        function changeId(className) {
            let select = document.getElementsByClassName(className);
            select.id = number;

            show_quests(select.id);
        }

        function show_quests(project_id) {
            $(".optionQuest").remove();

            {% for key, value in quests %}
            if ( {{ key }} == project_id
        )
            {
                {% for val in value %}
                document.querySelector(".project_quests").insertAdjacentHTML('beforeend',
                    "<option id=" + "{{ val.id }}" + " class=" + "optionQuest" + ">{{ val.content }}</option>");
                {% endfor %}
            }
            {% endfor %}

            let selectWork = document.querySelector(".project_quests");
            selectWork.selectedIndex = "0";

            changeIdButton(selectWork.options[selectWork.selectedIndex].id);
        }

        function changeIdButton(questId) {
            let button = document.getElementsByName("showOneQuest");
            button[0].id = questId;
        }

        function showQuest(buttonId) {
            let questId = buttonId;

            if (questId) {
                let url = '{{ path("show_quest", {'id': 'quest_id'}) }}';
                url = url.replace("quest_id", questId);

                let a = document.createElement('a');
                a.href = url;
                a.click();
            }
        }

        function editProject(projectId) {
            let projectName = document.getElementById(projectId).value;
            if (projectName.length >= 3 && projectName.length <= 100) {
                let url = '{{ path("edit_project", {'id': 'project_id'}) }}';
                url = url.replace("project_id", projectId);

                form = document.getElementById("formEditProject");
                form.method = "GET";
                form.action = url;
                form.Name.value = projectName;

                form.submit();
            } else {
                let title = document.getElementById("title");
                title.insertAdjacentHTML("beforebegin", '<div class="mt-3 alert alert-warning alert-dismissible fade show" role="alert">' +
                    '                        {% trans %}Nazwa projektu musi zawierać od 3 do 100 znaków{% endtrans %}\n' +
                    '                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n' +
                    '                            <span aria-hidden="true">&times;</span>\n' +
                    '                        </button>\n' +
                    '                    </div>');
            }
        }

        function delete_trigger() {
            window.location.href = '/projects/delete/'.concat(number_delete);
        }

        document.querySelector(".delete").onclick = function () {
            delete_trigger()
        };

        function editProjectClient(project_id) {
            document.getElementById("formChangeClient").submit();
        }
    </script>
{% endblock %}
